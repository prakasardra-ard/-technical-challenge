FAKE_API/
├── .vscode/                  # Editor settings (optional)
├── Data/
│   └── currency_rates.csv    # Static currency conversion rates
├── src/
│   ├── ingest_bookings.py    # Fetches bookings from fake API and inserts into DB
│   ├── init_db.py            # Creates required PostgreSQL tables
│   ├── load_rates.py         # Loads currency rates from CSV into DB
│   ├── print_summary.py      # Prints final summary table to terminal
│   ├── view_data.py          # Optional: inspect raw tables
│   └── transform.sql         # SQL logic to generate final_summary table
├── docker-compose.yml        # Spins up PostgreSQL container
├── fake_api.py               # Flask app serving booking data
|___Main.py                   #Integrate each scripts          
└── requirements.txt          # Python dependencies

1. Install Python Dependencies
python -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
pip install -r requirements.txt
2. Start PostgreSQL with Docker
docker-compose up -d
This launches a PostgreSQL container with:

Host: localhost

Port: 5432

DB: truvi_db

User: truvi

Password: truvi

3.Start the Fake API
python fake_api.py
This starts a Flask server at http://localhost:5000/api/bookings
4.After starting the Fake API and PostgreSQL container, run:

bash
python main.py
This script will:

Initialize the database and create required tables

Ingest bookings from the fake API

Load GBP currency rates from the CSV

Execute the transformation SQL

Populate the final_summary table

Print the final summary to the terminal

No need to run individual scripts or psql manually — everything is handled in one go.